syntax = "proto3";

package controlplane;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// Control plane service for managing deployments
service ControlPlane {
  // Health check for services
  rpc HealthCheck(google.protobuf.Empty) returns (HealthStatus);

  // Stream logs from a service
  rpc StreamLogs(LogRequest) returns (stream LogLine);

  // Deploy services from repository slugs
  rpc Deploy(DeployRequest) returns (DeployResult);
}

// Health status response
message HealthStatus {
  enum Status {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }

  Status status = 1;
  string message = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// Log request
message LogRequest {
  string service_name = 1;
  bool follow = 2;
  int32 tail_lines = 3;
}

// Log line
message LogLine {
  google.protobuf.Timestamp timestamp = 1;
  string message = 2;
  string level = 3;
  string service_name = 4;
}

// Deploy request
message DeployRequest {
  repeated string slugs = 1;
  bool wait_for_ready = 2;
  int32 timeout_seconds = 3;
}

// Deploy result
message DeployResult {
  repeated ServiceResult services = 1;
  bool success = 2;
  string error_message = 3;
}

// Service deployment result
message ServiceResult {
  string slug = 1;
  string service_name = 2;
  bool deployed = 3;
  string image_name = 4;
  string container_id = 5;
  HealthStatus health_status = 6;
  string error_message = 7;
}
